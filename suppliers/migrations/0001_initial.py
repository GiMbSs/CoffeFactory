# Generated by Django 5.2.5 on 2025-09-01 14:24

import django.core.validators
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this record is active')),
                ('code', models.CharField(help_text='Código único do fornecedor', max_length=20, unique=True)),
                ('name', models.CharField(help_text='Nome/Razão social do fornecedor', max_length=200)),
                ('trade_name', models.CharField(blank=True, help_text='Nome fantasia', max_length=200)),
                ('supplier_type', models.CharField(choices=[('individual', 'Pessoa Física'), ('company', 'Pessoa Jurídica')], default='company', help_text='Tipo de fornecedor', max_length=20)),
                ('cnpj_cpf', models.CharField(blank=True, help_text='CNPJ ou CPF', max_length=18, validators=[django.core.validators.RegexValidator(message='CNPJ deve estar no formato XX.XXX.XXX/XXXX-XX ou CPF no formato XXX.XXX.XXX-XX', regex='^\\d{2}\\.\\d{3}\\.\\d{3}/\\d{4}-\\d{2}$|^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$')])),
                ('state_registration', models.CharField(blank=True, help_text='Inscrição estadual', max_length=20)),
                ('municipal_registration', models.CharField(blank=True, help_text='Inscrição municipal', max_length=20)),
                ('email', models.EmailField(blank=True, help_text='Email principal', max_length=254)),
                ('phone', models.CharField(blank=True, help_text='Telefone principal', max_length=15, validators=[django.core.validators.RegexValidator(message="Telefone deve estar no formato '+999999999'. Até 15 dígitos.", regex='^\\+?1?\\d{9,15}$')])),
                ('mobile', models.CharField(blank=True, help_text='Celular', max_length=15, validators=[django.core.validators.RegexValidator(message="Celular deve estar no formato '+999999999'. Até 15 dígitos.", regex='^\\+?1?\\d{9,15}$')])),
                ('website', models.URLField(blank=True, help_text='Website')),
                ('address', models.CharField(blank=True, help_text='Endereço', max_length=200)),
                ('address_number', models.CharField(blank=True, help_text='Número', max_length=10)),
                ('address_complement', models.CharField(blank=True, help_text='Complemento', max_length=100)),
                ('neighborhood', models.CharField(blank=True, help_text='Bairro', max_length=100)),
                ('city', models.CharField(blank=True, help_text='Cidade', max_length=100)),
                ('state', models.CharField(blank=True, help_text='Estado (UF)', max_length=2)),
                ('postal_code', models.CharField(blank=True, help_text='CEP', max_length=10, validators=[django.core.validators.RegexValidator(message='CEP deve estar no formato XXXXX-XXX', regex='^\\d{5}-?\\d{3}$')])),
                ('country', models.CharField(default='Brasil', help_text='País', max_length=50)),
                ('contact_person', models.CharField(blank=True, help_text='Pessoa de contato', max_length=100)),
                ('contact_email', models.EmailField(blank=True, help_text='Email da pessoa de contato', max_length=254)),
                ('contact_phone', models.CharField(blank=True, help_text='Telefone da pessoa de contato', max_length=15)),
                ('payment_terms', models.CharField(blank=True, help_text='Condições de pagamento', max_length=100)),
                ('credit_limit', models.DecimalField(blank=True, decimal_places=2, help_text='Limite de crédito', max_digits=12, null=True)),
                ('notes', models.TextField(blank=True, help_text='Observações')),
            ],
            options={
                'verbose_name': 'Supplier',
                'verbose_name_plural': 'Suppliers',
                'ordering': ['name'],
            },
        ),
    ]
