# Generated by Django 5.2.5 on 2025-09-01 14:24

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('suppliers', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UnitOfMeasure',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this record is active')),
                ('name', models.CharField(help_text='Nome da unidade (ex: kg, litro, unidade)', max_length=50, unique=True)),
                ('abbreviation', models.CharField(help_text='Abreviação da unidade (ex: kg, L, un)', max_length=10, unique=True)),
                ('description', models.TextField(blank=True, help_text='Descrição da unidade')),
            ],
            options={
                'verbose_name': 'Unit of Measure',
                'verbose_name_plural': 'Units of Measure',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this record is active')),
                ('name', models.CharField(help_text='Nome da categoria', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Descrição da categoria')),
                ('category_type', models.CharField(choices=[('material', 'Material/Insumo'), ('product', 'Produto Acabado')], help_text='Tipo da categoria', max_length=20)),
                ('parent', models.ForeignKey(blank=True, help_text='Categoria pai (para subcategorias)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='inventory.category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this record is active')),
                ('code', models.CharField(help_text='Código único do material', max_length=50, unique=True)),
                ('name', models.CharField(help_text='Nome do material', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Descrição detalhada do material')),
                ('cost_per_unit', models.DecimalField(decimal_places=2, help_text='Custo por unidade em reais', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('minimum_stock', models.DecimalField(decimal_places=3, default=0, help_text='Estoque mínimo', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('maximum_stock', models.DecimalField(blank=True, decimal_places=3, help_text='Estoque máximo (opcional)', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('status', models.CharField(choices=[('active', 'Ativo'), ('inactive', 'Inativo'), ('discontinued', 'Descontinuado')], default='active', help_text='Status do material', max_length=20)),
                ('notes', models.TextField(blank=True, help_text='Observações')),
                ('category', models.ForeignKey(help_text='Categoria do material', limit_choices_to={'category_type': 'material'}, on_delete=django.db.models.deletion.PROTECT, related_name='materials', to='inventory.category')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('supplier', models.ForeignKey(blank=True, help_text='Fornecedor principal', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='materials', to='suppliers.supplier')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Material',
                'verbose_name_plural': 'Materials',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this record is active')),
                ('code', models.CharField(help_text='Código único do produto', max_length=50, unique=True)),
                ('name', models.CharField(help_text='Nome do produto', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Descrição detalhada do produto')),
                ('cost_per_unit', models.DecimalField(decimal_places=2, help_text='Custo de produção por unidade', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('sale_price', models.DecimalField(decimal_places=2, help_text='Preço de venda por unidade', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('minimum_stock', models.DecimalField(decimal_places=3, default=0, help_text='Estoque mínimo', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('maximum_stock', models.DecimalField(blank=True, decimal_places=3, help_text='Estoque máximo (opcional)', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('status', models.CharField(choices=[('active', 'Ativo'), ('inactive', 'Inativo'), ('discontinued', 'Descontinuado')], default='active', help_text='Status do produto', max_length=20)),
                ('weight', models.DecimalField(blank=True, decimal_places=3, help_text='Peso em kg (opcional)', max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('dimensions', models.CharField(blank=True, help_text='Dimensões (ex: 10x15x20 cm)', max_length=100)),
                ('barcode', models.CharField(blank=True, help_text='Código de barras', max_length=50, null=True, unique=True)),
                ('image', models.ImageField(blank=True, help_text='Imagem do produto', null=True, upload_to='products/')),
                ('notes', models.TextField(blank=True, help_text='Observações')),
                ('category', models.ForeignKey(help_text='Categoria do produto', limit_choices_to={'category_type': 'product'}, on_delete=django.db.models.deletion.PROTECT, related_name='products', to='inventory.category')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this record is active')),
                ('movement_type', models.CharField(choices=[('in', 'Entrada'), ('out', 'Saída'), ('adjustment', 'Ajuste'), ('transfer', 'Transferência')], help_text='Tipo de movimentação', max_length=20)),
                ('reason', models.CharField(choices=[('purchase', 'Compra'), ('production', 'Produção'), ('sale', 'Venda'), ('loss', 'Perda'), ('damaged', 'Danificado'), ('expired', 'Vencido'), ('adjustment', 'Ajuste de Inventário'), ('return', 'Devolução'), ('transfer', 'Transferência'), ('initial', 'Estoque Inicial')], help_text='Motivo da movimentação', max_length=20)),
                ('quantity', models.DecimalField(decimal_places=3, help_text='Quantidade (positiva para entrada, negativa para saída)', max_digits=10)),
                ('unit_cost', models.DecimalField(blank=True, decimal_places=2, help_text='Custo unitário na movimentação', max_digits=10, null=True)),
                ('total_cost', models.DecimalField(blank=True, decimal_places=2, help_text='Custo total da movimentação', max_digits=12, null=True)),
                ('document_number', models.CharField(blank=True, help_text='Número do documento (NF, OP, etc.)', max_length=50)),
                ('notes', models.TextField(blank=True, help_text='Observações')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('material', models.ForeignKey(blank=True, help_text='Material relacionado', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stock_movements', to='inventory.material')),
                ('product', models.ForeignKey(blank=True, help_text='Produto relacionado', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stock_movements', to='inventory.product')),
            ],
            options={
                'verbose_name': 'Stock Movement',
                'verbose_name_plural': 'Stock Movements',
                'ordering': ['-created_at'],
            },
        ),
    ]
