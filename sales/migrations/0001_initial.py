# Generated by Django 5.2.5 on 2025-09-01 14:24

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('inventory', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this record is active')),
                ('code', models.CharField(help_text='Código único do cliente', max_length=20, unique=True)),
                ('name', models.CharField(help_text='Nome/Razão social do cliente', max_length=200)),
                ('trade_name', models.CharField(blank=True, help_text='Nome fantasia', max_length=200)),
                ('customer_type', models.CharField(choices=[('individual', 'Pessoa Física'), ('company', 'Pessoa Jurídica')], default='individual', help_text='Tipo de cliente', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Ativo'), ('inactive', 'Inativo'), ('blocked', 'Bloqueado')], default='active', help_text='Status do cliente', max_length=20)),
                ('cnpj_cpf', models.CharField(blank=True, help_text='CNPJ ou CPF', max_length=18, validators=[django.core.validators.RegexValidator(message='CNPJ deve estar no formato XX.XXX.XXX/XXXX-XX ou CPF no formato XXX.XXX.XXX-XX', regex='^\\d{2}\\.\\d{3}\\.\\d{3}/\\d{4}-\\d{2}$|^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$')])),
                ('state_registration', models.CharField(blank=True, help_text='Inscrição estadual', max_length=20)),
                ('email', models.EmailField(blank=True, help_text='Email principal', max_length=254)),
                ('phone', models.CharField(blank=True, help_text='Telefone principal', max_length=15, validators=[django.core.validators.RegexValidator(message="Telefone deve estar no formato '+999999999'. Até 15 dígitos.", regex='^\\+?1?\\d{9,15}$')])),
                ('mobile', models.CharField(blank=True, help_text='Celular', max_length=15, validators=[django.core.validators.RegexValidator(message="Celular deve estar no formato '+999999999'. Até 15 dígitos.", regex='^\\+?1?\\d{9,15}$')])),
                ('address', models.CharField(blank=True, help_text='Endereço', max_length=200)),
                ('address_number', models.CharField(blank=True, help_text='Número', max_length=10)),
                ('address_complement', models.CharField(blank=True, help_text='Complemento', max_length=100)),
                ('neighborhood', models.CharField(blank=True, help_text='Bairro', max_length=100)),
                ('city', models.CharField(blank=True, help_text='Cidade', max_length=100)),
                ('state', models.CharField(blank=True, help_text='Estado (UF)', max_length=2)),
                ('postal_code', models.CharField(blank=True, help_text='CEP', max_length=10, validators=[django.core.validators.RegexValidator(message='CEP deve estar no formato XXXXX-XXX', regex='^\\d{5}-?\\d{3}$')])),
                ('country', models.CharField(default='Brasil', help_text='País', max_length=50)),
                ('credit_limit', models.DecimalField(blank=True, decimal_places=2, help_text='Limite de crédito', max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('payment_terms', models.CharField(blank=True, help_text='Condições de pagamento', max_length=100)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, help_text='Desconto padrão (%)', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MinValueValidator(Decimal('100'))])),
                ('notes', models.TextField(blank=True, help_text='Observações')),
                ('sales_representative', models.ForeignKey(blank=True, help_text='Representante de vendas', limit_choices_to={'department': 'sales'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customers', to='accounts.employee')),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SalesOrder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this record is active')),
                ('order_number', models.CharField(help_text='Número único do pedido de venda', max_length=50, unique=True)),
                ('status', models.CharField(choices=[('draft', 'Rascunho'), ('confirmed', 'Confirmado'), ('in_production', 'Em Produção'), ('ready', 'Pronto'), ('delivered', 'Entregue'), ('partially_paid', 'Parcialmente Pago'), ('paid', 'Pago'), ('cancelled', 'Cancelado')], default='draft', help_text='Status do pedido', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Baixa'), ('normal', 'Normal'), ('high', 'Alta'), ('urgent', 'Urgente')], default='normal', help_text='Prioridade do pedido', max_length=10)),
                ('order_date', models.DateTimeField(auto_now_add=True, help_text='Data do pedido')),
                ('delivery_date', models.DateField(help_text='Data de entrega prometida')),
                ('actual_delivery_date', models.DateField(blank=True, help_text='Data real de entrega', null=True)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, help_text='Subtotal (sem desconto e impostos)', max_digits=12)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, help_text='Desconto (%)', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MinValueValidator(Decimal('100'))])),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, help_text='Valor do desconto', max_digits=12)),
                ('tax_percentage', models.DecimalField(decimal_places=2, default=0, help_text='Impostos (%)', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, help_text='Valor dos impostos', max_digits=12)),
                ('shipping_cost', models.DecimalField(decimal_places=2, default=0, help_text='Custo de envio', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, help_text='Valor total do pedido', max_digits=12)),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0, help_text='Valor já pago', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('payment_terms', models.CharField(blank=True, help_text='Condições de pagamento', max_length=100)),
                ('payment_method', models.CharField(blank=True, help_text='Forma de pagamento', max_length=50)),
                ('notes', models.TextField(blank=True, help_text='Observações')),
                ('internal_notes', models.TextField(blank=True, help_text='Observações internas')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(help_text='Cliente', on_delete=django.db.models.deletion.PROTECT, related_name='sales_orders', to='sales.customer')),
                ('sales_representative', models.ForeignKey(help_text='Representante de vendas', limit_choices_to={'department': 'sales'}, on_delete=django.db.models.deletion.PROTECT, related_name='sales_orders', to='accounts.employee')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Sales Order',
                'verbose_name_plural': 'Sales Orders',
                'ordering': ['-order_date'],
            },
        ),
        migrations.CreateModel(
            name='SalesOrderItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this record is active')),
                ('quantity', models.DecimalField(decimal_places=3, help_text='Quantidade', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))])),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Preço unitário', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, help_text='Desconto item (%)', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MinValueValidator(Decimal('100'))])),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, help_text='Valor do desconto do item', max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, default=0, help_text='Preço total do item', max_digits=12)),
                ('delivered_quantity', models.DecimalField(decimal_places=3, default=0, help_text='Quantidade entregue', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('product', models.ForeignKey(help_text='Produto', on_delete=django.db.models.deletion.CASCADE, related_name='sales_order_items', to='inventory.product')),
                ('sales_order', models.ForeignKey(help_text='Pedido de venda', on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='sales.salesorder')),
            ],
            options={
                'verbose_name': 'Sales Order Item',
                'verbose_name_plural': 'Sales Order Items',
                'ordering': ['product__name'],
                'unique_together': {('sales_order', 'product')},
            },
        ),
    ]
