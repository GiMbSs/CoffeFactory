# Generated by Django 5.2.5 on 2025-09-01 14:24

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('sales', '0001_initial'),
        ('suppliers', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountsPayable',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this record is active')),
                ('invoice_number', models.CharField(help_text='Número da fatura do fornecedor', max_length=50)),
                ('expense_type', models.CharField(choices=[('material_purchase', 'Compra de Materiais'), ('equipment', 'Equipamentos'), ('maintenance', 'Manutenção'), ('utilities', 'Utilidades'), ('rent', 'Aluguel'), ('insurance', 'Seguro'), ('taxes', 'Impostos'), ('services', 'Serviços'), ('salaries', 'Salários'), ('benefits', 'Benefícios'), ('travel', 'Viagens'), ('marketing', 'Marketing'), ('office_supplies', 'Material de Escritório'), ('other', 'Outros')], help_text='Tipo de despesa', max_length=30)),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('partially_paid', 'Parcialmente Pago'), ('paid', 'Pago'), ('overdue', 'Em Atraso'), ('cancelled', 'Cancelado')], default='pending', help_text='Status do pagável', max_length=20)),
                ('original_amount', models.DecimalField(decimal_places=2, help_text='Valor original', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0, help_text='Valor pago', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, help_text='Valor de desconto obtido', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('interest_amount', models.DecimalField(decimal_places=2, default=0, help_text='Valor de juros', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('fine_amount', models.DecimalField(decimal_places=2, default=0, help_text='Valor de multa', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('invoice_date', models.DateField(help_text='Data da fatura')),
                ('due_date', models.DateField(help_text='Data de vencimento')),
                ('payment_date', models.DateField(blank=True, help_text='Data de pagamento', null=True)),
                ('payment_method', models.CharField(blank=True, choices=[('cash', 'Dinheiro'), ('check', 'Cheque'), ('bank_transfer', 'Transferência Bancária'), ('credit_card', 'Cartão de Crédito'), ('debit_card', 'Cartão de Débito'), ('pix', 'PIX'), ('promissory_note', 'Nota Promissória'), ('other', 'Outros')], help_text='Forma de pagamento', max_length=20)),
                ('bank_account', models.CharField(blank=True, help_text='Conta bancária de pagamento', max_length=100)),
                ('reference_number', models.CharField(blank=True, help_text='Número de referência (cheque, transferência, etc.)', max_length=100)),
                ('description', models.CharField(help_text='Descrição', max_length=200)),
                ('notes', models.TextField(blank=True, help_text='Observações')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('supplier', models.ForeignKey(help_text='Fornecedor', on_delete=django.db.models.deletion.PROTECT, related_name='payables', to='suppliers.supplier')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Accounts Payable',
                'verbose_name_plural': 'Accounts Payable',
                'ordering': ['due_date', '-invoice_date'],
            },
        ),
        migrations.CreateModel(
            name='AccountsPayablePayment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this record is active')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Valor do pagamento', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('payment_date', models.DateField(help_text='Data do pagamento')),
                ('payment_method', models.CharField(choices=[('cash', 'Dinheiro'), ('check', 'Cheque'), ('bank_transfer', 'Transferência Bancária'), ('credit_card', 'Cartão de Crédito'), ('debit_card', 'Cartão de Débito'), ('pix', 'PIX'), ('promissory_note', 'Nota Promissória'), ('other', 'Outros')], help_text='Forma de pagamento', max_length=20)),
                ('reference_number', models.CharField(blank=True, help_text='Número de referência', max_length=100)),
                ('notes', models.TextField(blank=True, help_text='Observações')),
                ('payable', models.ForeignKey(help_text='Conta a pagar', on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='financial.accountspayable')),
            ],
            options={
                'verbose_name': 'Payable Payment',
                'verbose_name_plural': 'Payable Payments',
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='AccountsReceivable',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this record is active')),
                ('invoice_number', models.CharField(help_text='Número da fatura', max_length=50, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('partially_paid', 'Parcialmente Pago'), ('paid', 'Pago'), ('overdue', 'Em Atraso'), ('written_off', 'Baixado'), ('cancelled', 'Cancelado')], default='pending', help_text='Status do recebível', max_length=20)),
                ('original_amount', models.DecimalField(decimal_places=2, help_text='Valor original', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0, help_text='Valor pago', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, help_text='Valor de desconto concedido', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('interest_amount', models.DecimalField(decimal_places=2, default=0, help_text='Valor de juros', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('fine_amount', models.DecimalField(decimal_places=2, default=0, help_text='Valor de multa', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('issue_date', models.DateField(help_text='Data de emissão')),
                ('due_date', models.DateField(help_text='Data de vencimento')),
                ('payment_date', models.DateField(blank=True, help_text='Data de pagamento', null=True)),
                ('payment_method', models.CharField(blank=True, choices=[('cash', 'Dinheiro'), ('check', 'Cheque'), ('bank_transfer', 'Transferência Bancária'), ('credit_card', 'Cartão de Crédito'), ('debit_card', 'Cartão de Débito'), ('pix', 'PIX'), ('promissory_note', 'Nota Promissória'), ('other', 'Outros')], help_text='Forma de pagamento', max_length=20)),
                ('bank_account', models.CharField(blank=True, help_text='Conta bancária de recebimento', max_length=100)),
                ('reference_number', models.CharField(blank=True, help_text='Número de referência (cheque, transferência, etc.)', max_length=100)),
                ('description', models.CharField(help_text='Descrição', max_length=200)),
                ('notes', models.TextField(blank=True, help_text='Observações')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(help_text='Cliente', on_delete=django.db.models.deletion.PROTECT, related_name='receivables', to='sales.customer')),
                ('sales_order', models.ForeignKey(blank=True, help_text='Pedido de venda relacionado', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='receivables', to='sales.salesorder')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Accounts Receivable',
                'verbose_name_plural': 'Accounts Receivable',
                'ordering': ['due_date', '-issue_date'],
            },
        ),
        migrations.CreateModel(
            name='AccountsReceivablePayment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this record is active')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Valor do pagamento', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('payment_date', models.DateField(help_text='Data do pagamento')),
                ('payment_method', models.CharField(choices=[('cash', 'Dinheiro'), ('check', 'Cheque'), ('bank_transfer', 'Transferência Bancária'), ('credit_card', 'Cartão de Crédito'), ('debit_card', 'Cartão de Débito'), ('pix', 'PIX'), ('promissory_note', 'Nota Promissória'), ('other', 'Outros')], help_text='Forma de pagamento', max_length=20)),
                ('reference_number', models.CharField(blank=True, help_text='Número de referência', max_length=100)),
                ('notes', models.TextField(blank=True, help_text='Observações')),
                ('receivable', models.ForeignKey(help_text='Conta a receber', on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='financial.accountsreceivable')),
            ],
            options={
                'verbose_name': 'Receivable Payment',
                'verbose_name_plural': 'Receivable Payments',
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='Payroll',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this record is active')),
                ('payroll_number', models.CharField(help_text='Número da folha de pagamento', max_length=50, unique=True)),
                ('reference_month', models.DateField(help_text='Mês de referência (primeiro dia do mês)')),
                ('status', models.CharField(choices=[('draft', 'Rascunho'), ('calculated', 'Calculado'), ('approved', 'Aprovado'), ('paid', 'Pago'), ('cancelled', 'Cancelado')], default='draft', help_text='Status da folha', max_length=20)),
                ('days_worked', models.IntegerField(default=30, help_text='Dias trabalhados', validators=[django.core.validators.MinValueValidator(0)])),
                ('hours_worked', models.DecimalField(decimal_places=2, default=0, help_text='Horas trabalhadas', max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('overtime_hours', models.DecimalField(decimal_places=2, default=0, help_text='Horas extras', max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('base_salary', models.DecimalField(decimal_places=2, help_text='Salário base', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('overtime_amount', models.DecimalField(decimal_places=2, default=0, help_text='Valor das horas extras', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('bonus_amount', models.DecimalField(decimal_places=2, default=0, help_text='Bonificações', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('commission_amount', models.DecimalField(decimal_places=2, default=0, help_text='Comissões', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('other_earnings', models.DecimalField(decimal_places=2, default=0, help_text='Outros proventos', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('gross_salary', models.DecimalField(decimal_places=2, default=0, help_text='Salário bruto', max_digits=10)),
                ('inss_amount', models.DecimalField(decimal_places=2, default=0, help_text='INSS', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('irrf_amount', models.DecimalField(decimal_places=2, default=0, help_text='IRRF', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('health_insurance', models.DecimalField(decimal_places=2, default=0, help_text='Plano de saúde', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('dental_insurance', models.DecimalField(decimal_places=2, default=0, help_text='Plano odontológico', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('meal_voucher_discount', models.DecimalField(decimal_places=2, default=0, help_text='Desconto vale refeição', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('transport_voucher_discount', models.DecimalField(decimal_places=2, default=0, help_text='Desconto vale transporte', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('union_dues', models.DecimalField(decimal_places=2, default=0, help_text='Contribuição sindical', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('other_deductions', models.DecimalField(decimal_places=2, default=0, help_text='Outros descontos', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('total_deductions', models.DecimalField(decimal_places=2, default=0, help_text='Total de descontos', max_digits=10)),
                ('net_salary', models.DecimalField(decimal_places=2, default=0, help_text='Salário líquido', max_digits=10)),
                ('payment_date', models.DateField(blank=True, help_text='Data de pagamento', null=True)),
                ('payment_method', models.CharField(blank=True, help_text='Forma de pagamento', max_length=50)),
                ('bank_account', models.CharField(blank=True, help_text='Conta bancária', max_length=100)),
                ('notes', models.TextField(blank=True, help_text='Observações')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(help_text='Funcionário', on_delete=django.db.models.deletion.PROTECT, related_name='payrolls', to='accounts.employee')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Payroll',
                'verbose_name_plural': 'Payrolls',
                'ordering': ['-reference_month', 'employee__user__first_name'],
                'unique_together': {('employee', 'reference_month')},
            },
        ),
    ]
